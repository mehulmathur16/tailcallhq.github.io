"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7420],{85086:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>h,contentTitle:()=>o,default:()=>a,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"directives/telemetry","title":"@telemetry","description":"The @telemetry directive facilitates seamless integration with OpenTelemetry, enhancing the observability of your GraphQL services.","source":"@site/docs/directives/telemetry.md","sourceDirName":"directives","slug":"/telemetry-directive","permalink":"/tailcallhq.github.io/docs/telemetry-directive","draft":false,"unlisted":false,"editUrl":"https://github.com/tailcallhq/tailcallhq.github.io/tree/develop/docs/directives/telemetry.md","tags":[],"version":"current","lastUpdatedAt":1732308017000,"frontMatter":{"title":"@telemetry","description":"The @telemetry directive facilitates seamless integration with OpenTelemetry, enhancing the observability of your GraphQL services.","slug":"../telemetry-directive"},"sidebar":"docs","previous":{"title":"@server","permalink":"/tailcallhq.github.io/docs/server-directive"},"next":{"title":"@upstream","permalink":"/tailcallhq.github.io/docs/upstream-directive"}}');var n=r(74848),s=r(28453);const l={title:"@telemetry",description:"The @telemetry directive facilitates seamless integration with OpenTelemetry, enhancing the observability of your GraphQL services.",slug:"../telemetry-directive"},o=void 0,h={},d=[{value:"Traces",id:"traces",level:2},{value:"Metrics",id:"metrics",level:2},{value:"export",id:"export",level:2},{value:"otlp",id:"otlp",level:2},{value:"prometheus",id:"prometheus",level:2},{value:"stdout",id:"stdout",level:2},{value:"requestHeaders",id:"requestheaders",level:2},{value:"apollo",id:"apollo",level:2}];function c(e){const t={a:"a",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"@telemetry"})," directive is defined as follows:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-graphql",metastring:'title="Directive Definition" showLineNumbers',children:'directive @telemetry(\n  """\n  Export configuration for telemetry data\n  """\n  export: TelemetryExport\n\n  """\n  Headers from ingress request to be included in telemetry\n  """\n  requestHeaders: [String!]\n) on SCHEMA\n\ninput TelemetryExport {\n  otlp: OtlpConfig\n  prometheus: PrometheusConfig\n  stdout: StdoutConfig\n  apollo: ApolloConfig\n}\n\ninput OtlpConfig {\n  url: String!\n  headers: [InputKeyValue!]\n}\n\ninput PrometheusConfig {\n  path: String\n  format: PrometheusFormat\n}\n\ninput StdoutConfig {\n  pretty: Boolean\n}\n\ninput ApolloConfig {\n  api_key: String!\n  graph_ref: String!\n  platform: String\n  version: String\n}\n\nenum PrometheusFormat {\n  text\n  protobuf\n}\n'})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"@telemetry"})," directive facilitates seamless integration with ",(0,n.jsx)(t.a,{href:"https://open-telemetry.io",children:"OpenTelemetry"}),", enhancing the observability of your GraphQL services powered by Tailcall. By leveraging this directive, developers gain access to valuable insights into the performance and behavior of their applications."]}),"\n",(0,n.jsx)(t.h2,{id:"traces",children:"Traces"}),"\n",(0,n.jsxs)(t.p,{children:["Here are the traces that are captured by the ",(0,n.jsx)(t.code,{children:"@telemetry"})," directive:"]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"right"},children:"Trace Name"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"request"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Captures the span for processing the HTTP request on the server side, providing foundational observability."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"graphQL"}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.em,{children:"Only for GraphQL ingress"}),". Span for processing GraphQL call"]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"right"},children:(0,n.jsx)(t.code,{children:"REST <http_method> <http_route>"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.em,{children:"Only for REST ingress"}),". Span for processing REST API call"]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"right"},children:(0,n.jsx)(t.code,{children:"<field_name>"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Denotes spans for fields with defined resolvers, offering insights into field names and execution times for resolver logic."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"right"},children:(0,n.jsx)(t.code,{children:"<expr_name>"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Nested within the ",(0,n.jsx)(t.code,{children:"<field_name>"})," spans, these granulated spans detail the execution of expressions in resolving a field, highlighting the hierarchical execution pattern of nested expressions."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"upstream_request"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Request that were made from tailcall service to upstream"})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"metrics",children:"Metrics"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"@telemetry"})," directive also captures the following metrics:"]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"right"},children:"Metric"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"cache.hit_rate"}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Reflects the cache hit rate for the cache powered by the ",(0,n.jsx)(t.a,{href:"/tailcallhq.github.io/docs/cache-directive",children:(0,n.jsx)(t.code,{children:"@cache"})})," directive"]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"http.server.request.count"}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Counts the number of incoming requests made to specific route. Optionally enriched with selected headers by ",(0,n.jsx)(t.a,{href:"#requestheaders",children:(0,n.jsx)(t.code,{children:"requestHeaders"})})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"http.client.request.count"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Counts the number of outgoing requests to specific upstream"})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"export",children:"export"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"export"})," field defines how the open-telemetry data should be exported and in which format. The following are the supported formats:"]}),"\n",(0,n.jsx)(t.h2,{id:"otlp",children:"otlp"}),"\n",(0,n.jsx)(t.p,{children:"Utilizes the OTLP format to export telemetry data to backend systems, supported by most modern tracing and analytics platforms. Here is an example using [honeycomb.io]:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-graphql",children:'schema\n  @telemetry(\n    export: {\n      otlp: {\n        url: "https://api.honeycomb.io:443"\n        headers: [\n          {\n            key: "x-honeycomb-team"\n            value: "{{.env.HONEYCOMB_API_KEY}}"\n          }\n          {key: "x-honeycomb-dataset", value: "tailcall"}\n        ]\n      }\n    }\n  ) {\n  query: Query\n}\n'})}),"\n",(0,n.jsx)(t.p,{children:"You can configure the OTLP exporter with the following options:"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"right"},children:"Field"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"url"}),(0,n.jsx)(t.td,{children:"Defines the URL for the OTLP Collector."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"headers"}),(0,n.jsx)(t.td,{children:"Sets additional headers for requests to the OTLP Collector."})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"prometheus",children:"prometheus"}),"\n",(0,n.jsx)(t.p,{children:"Facilitates metrics export in a Prometheus compatible format, providing a dedicated endpoint for metrics."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-graphql",children:'schema\n  @telemetry(export: {prometheus: {path: "/metrics"}}) {\n  query: Query\n}\n'})}),"\n",(0,n.jsx)(t.p,{children:"You can configure the Prometheus exporter with the following options:"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"right"},children:"Field"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"path"}),(0,n.jsxs)(t.td,{children:["Designates the endpoint path for Prometheus metrics, defaulting to ",(0,n.jsx)(t.code,{children:"/metrics"}),"."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"format"}),(0,n.jsxs)(t.td,{children:["Controls the format viz. ",(0,n.jsx)(t.strong,{children:"text"})," or ",(0,n.jsx)(t.strong,{children:"protobuf"}),", for sending data to Prometheus."]})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"stdout",children:"stdout"}),"\n",(0,n.jsx)(t.p,{children:"Outputs all telemetry data to stdout, ideal for testing or local development environments."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-graphql",children:"schema @telemetry(export: {stdout: {pretty: true}}) {\n  query: Query\n}\n"})}),"\n",(0,n.jsx)(t.p,{children:"You can configure the stdout exporter with the following options:"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"right"},children:"Field"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"pretty"}),(0,n.jsx)(t.td,{children:"Enables formatted output of telemetry data for enhanced readability."})]})})]}),"\n",(0,n.jsx)(t.h2,{id:"requestheaders",children:"requestHeaders"}),"\n",(0,n.jsx)(t.p,{children:"Specifies list of headers of ingress request the value of which will be sent to the telemetry as attributes."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-graphql",children:'schema @telemetry(requestHeaders: ["X-User-Id"]) {\n  query: Query\n}\n'})}),"\n",(0,n.jsx)(t.h2,{id:"apollo",children:"apollo"}),"\n",(0,n.jsxs)(t.p,{children:["Facilitates seamless integration with ",(0,n.jsx)(t.a,{href:"https://studio.apollographql.com/",children:"Apollo Studio"}),", enhancing the observability of GraphQL services. By leveraging this field, developers gain access to valuable insights into the performance and behavior of their GraphQL APIs."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-graphql",children:'schema\n  @telemetry(\n    export: {\n      otlp: {\n        api_key: "{{.env.APOLLO_API_KEY}}"\n        graph_ref: "graph-id@current"\n        platform: "website.com"\n        version: "1.0.0"\n      }\n    }\n  ) {\n  query: Query\n}\n'})}),"\n",(0,n.jsx)(t.p,{children:"You can configure the apollo exporter with the following options:"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"right"},children:"Field"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"api_key"}),(0,n.jsx)(t.td,{children:"The API Key generated from Apollo Studio."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"graph_ref"}),(0,n.jsxs)(t.td,{children:["The Graph Ref, which is the ",(0,n.jsx)(t.code,{children:"graph_id"})," and the ",(0,n.jsx)(t.code,{children:"variant"})," concatenated using ",(0,n.jsx)(t.code,{children:"@"}),"(i.e. <graph_id>@<variant>)"]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"platform"}),(0,n.jsx)(t.td,{children:"An arbitrary value which can contain the name of your website or some other value to identify your deployment uniqely, in case you have multiple deployments."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"version"}),(0,n.jsx)(t.td,{children:"Version of Apollo which is being used."})]})]})]}),"\n",(0,n.jsxs)(t.p,{children:["By integrating the ",(0,n.jsx)(t.code,{children:"@telemetry"})," directive into your GraphQL schema, you empower your development teams with critical insights into application performance, enabling proactive optimization and maintenance."]})]})}function a(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>l,x:()=>o});var i=r(96540);const n={},s=i.createContext(n);function l(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);