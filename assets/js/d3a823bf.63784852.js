"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7458],{95452:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"runtime-config","title":"Getting Started","description":"Detailed guide on the runtime configuration for Tailcall.","source":"@site/docs/runtime-config.md","sourceDirName":".","slug":"/runtime-configuration","permalink":"/docs/runtime-configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/tailcallhq/tailcallhq.github.io/tree/develop/docs/runtime-config.md","tags":[],"version":"current","lastUpdatedAt":1734952853000,"frontMatter":{"title":"Getting Started","description":"Detailed guide on the runtime configuration for Tailcall.","slug":"runtime-configuration"},"sidebar":"docs","previous":{"title":"Watch Mode","permalink":"/docs/graphql-watch-mode-tailcall"},"next":{"title":"links","permalink":"/docs/links-config"}}');var r=t(74848),s=t(28453);const o={title:"Getting Started",description:"Detailed guide on the runtime configuration for Tailcall.",slug:"runtime-configuration"},c=void 0,a={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Configuration Structure",id:"configuration-structure",level:2},{value:"Example Usage",id:"example-usage",level:2},{value:"Configuration Options",id:"configuration-options",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["The runtime configuration in Tailcall is designed to handle all runtime-related settings, such as server settings, upstream configurations, telemetry, and links to other resources. This configuration is written exclusively in ",(0,r.jsx)(n.code,{children:".json"})," or ",(0,r.jsx)(n.code,{children:".yml"})," format."]}),"\n",(0,r.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsx)(n.p,{children:"The runtime configuration separates runtime concerns from schema definitions, simplifying the management and merging of configurations. This approach ensures a clear distinction between runtime settings and schema definitions, making the configuration process more predictable and easier to manage."}),"\n",(0,r.jsx)(n.h2,{id:"configuration-structure",children:"Configuration Structure"}),"\n",(0,r.jsx)(n.p,{children:"A typical runtime configuration file includes settings for the server, upstream services, telemetry, and links to other resources. Below is an example of a runtime configuration in YAML format:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'title="main.yaml" showLineNumbers',children:'server:\n  port: 8000\n\nupstream:\n  batch:\n    maxSize: 1000\n\ntelemetry:\n  export:\n    stdout:\n      pretty: true\n\nlinks:\n  - src: "./users.graphql"\n  - src: "./products.graphql"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,r.jsx)(n.p,{children:"To start the Tailcall server with the runtime configuration, use the following command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"tailcall start ./main.yaml\n"})}),"\n",(0,r.jsx)(n.p,{children:"This command will start the server using the settings defined in main.yml."}),"\n",(0,r.jsx)(n.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Option"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/server-config",children:(0,r.jsx)(n.code,{children:"server"})})}),(0,r.jsx)(n.td,{children:"Configuration settings for the Tailcall server, including port and host."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/upstream-configuration",children:(0,r.jsx)(n.code,{children:"upstream"})})}),(0,r.jsx)(n.td,{children:"Settings for upstream services, such as batching and timeouts."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/telemetry-config",children:(0,r.jsx)(n.code,{children:"telemetry"})})}),(0,r.jsx)(n.td,{children:"Configuration for telemetry export options, including format and endpoints."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/links-config",children:(0,r.jsx)(n.code,{children:"links"})})}),(0,r.jsx)(n.td,{children:"Links to other resources or schema files to be included in the configuration."})]})]})]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var i=t(96540);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);