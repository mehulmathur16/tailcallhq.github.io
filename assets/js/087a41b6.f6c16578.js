"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7418],{27222:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var r=n(74848),t=n(28453);const i={title:"@grpc",description:"The @grpc directive enables the resolution of GraphQL fields via gRPC services.",slug:"../grpc-directive"},c=void 0,o={id:"directives/grpc",title:"@grpc",description:"The @grpc directive enables the resolution of GraphQL fields via gRPC services.",source:"@site/docs/directives/grpc.md",sourceDirName:"directives",slug:"/grpc-directive",permalink:"/tailcallhq.github.io/docs/grpc-directive",draft:!1,unlisted:!1,editUrl:"https://github.com/tailcallhq/tailcallhq.github.io/tree/develop/docs/directives/grpc.md",tags:[],version:"current",lastUpdatedAt:1732308017e3,frontMatter:{title:"@grpc",description:"The @grpc directive enables the resolution of GraphQL fields via gRPC services.",slug:"../grpc-directive"},sidebar:"docs",previous:{title:"@graphQL",permalink:"/tailcallhq.github.io/docs/graphQL-directive"},next:{title:"@http",permalink:"/tailcallhq.github.io/docs/http-directive"}},a={},l=[{value:"method",id:"method",level:2},{value:"url",id:"url",level:2},{value:"body",id:"body",level:2},{value:"headers",id:"headers",level:2},{value:"batchKey",id:"batchkey",level:2},{value:"onResponseBody",id:"onresponsebody",level:2},{value:"select",id:"select",level:2},{value:"dedupe",id:"dedupe",level:2}];function d(e){const s={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.code,{children:"@grpc"})," directive is defined as follows:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-graphql",metastring:'title="Directive Definition" showLineNumbers',children:"directive @grpc(\n  url: String!\n  method: String!\n  body: JSON\n  headers: [InputKeyValue!]\n  batchKey: [String!]\n  onResponseBody: String\n  select: JSON\n  dedupe: Boolean\n) on FIELD_DEFINITION\n"})}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.code,{children:"@grpc"})," directive enables the resolution of GraphQL fields via gRPC services. Below is an illustrative example of how to apply this directive within a GraphQL schema:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-graphql",metastring:"showLineNumbers",children:'schema @link(src: "./users.proto", type: Protobuf) {\n  query: Query\n}\n\ntype Query {\n  users: [User] @grpc(method: "users.UserService.ListUsers")\n}\n'})}),"\n",(0,r.jsxs)(s.p,{children:["This schema snippet demonstrates the directive's application, where a query for ",(0,r.jsx)(s.code,{children:"users"})," triggers a gRPC request to the ",(0,r.jsx)(s.code,{children:"UserService"}),"'s ",(0,r.jsx)(s.code,{children:"ListUsers"})," method, thereby fetching the user data."]}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.code,{children:".proto"})," file delineates the structure and methods of the gRPC service. A simplified example of such a file is as follows:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-proto",children:'syntax = "proto3";\n\npackage users;\n\nservice UserService {\n  rpc ListUsers (UserListRequest) returns (UserListReply) {}\n  rpc GetUser (UserGetRequest) returns (UserGetReply) {}\n}\n\nmessage UserListRequest {\n  // Definitions of request parameters\n}\n\nmessage UserListReply {\n  // Structure of the reply\n}\n\nmessage UserGetRequest {\n  // Definitions of request parameters\n}\n\nmessage UserGetReply {\n  // Structure of the reply\n}\n'})}),"\n",(0,r.jsx)(s.admonition,{type:"important",children:(0,r.jsx)(s.p,{children:"It is mandatory to have a package name in a protobuf file."})}),"\n",(0,r.jsxs)(s.p,{children:["Linking this file within a GraphQL schema is facilitated by the ",(0,r.jsx)(s.code,{children:"@link"})," directive, as shown below:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-graphql",children:'schema @link(src: "./users.proto", type: Protobuf) {\n  query: Query\n}\n'})}),"\n",(0,r.jsxs)(s.p,{children:["Tailcall automatically resolves the protobuf file for any methods referenced in the ",(0,r.jsx)(s.code,{children:"@grpc"})," directive."]}),"\n",(0,r.jsx)(s.h2,{id:"method",children:"method"}),"\n",(0,r.jsxs)(s.p,{children:["This parameter specifies the gRPC service and method to be invoked, formatted as ",(0,r.jsx)(s.code,{children:"<package>.<service>.<method>"}),":"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-graphql",children:'type Query {\n  users: [User]\n    @grpc(method: "proto.users.UserService.ListUsers")\n}\n'})}),"\n",(0,r.jsx)(s.h2,{id:"url",children:"url"}),"\n",(0,r.jsx)(s.p,{children:"Defines the base URL for the gRPC API."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-graphql",children:'type Query {\n  users: [User]\n    @grpc(\n      url: "https://grpc-server.example.com"\n      method: "proto.users.UserService.ListUsers"\n    )\n}\n'})}),"\n",(0,r.jsx)(s.h2,{id:"body",children:"body"}),"\n",(0,r.jsx)(s.p,{children:"This parameter outlines the arguments for the gRPC call, allowing for both static and dynamic inputs:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-graphql",children:'type UserInput {\n  id: ID\n}\n\ntype Query {\n  user(id: UserInput!): User\n    @grpc(\n      body: "{{.args.id}}"\n      method: "proto.users.UserService.GetUser"\n    )\n}\n'})}),"\n",(0,r.jsx)(s.h2,{id:"headers",children:"headers"}),"\n",(0,r.jsx)(s.p,{children:"Custom headers for the gRPC request can be defined, facilitating the transmission of authentication tokens or other contextual data:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-graphql",children:'type Query {\n  users: [User]\n    @grpc(\n      headers: [\n        {key: "X-CUSTOM-HEADER", value: "custom-value"}\n      ]\n      method: "proto.users.UserService.ListUsers"\n    )\n}\n'})}),"\n",(0,r.jsx)(s.h2,{id:"batchkey",children:"batchKey"}),"\n",(0,r.jsx)(s.p,{children:"This argument is employed to optimize batch requests by grouping them based on specified response keys, enhancing performance in scenarios requiring multiple, similar requests:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-graphql",children:'type Query {\n  users(id: UserInput!): [User]\n    @grpc(\n      batchKey: ["id"]\n      method: "proto.users.UserService.ListUsers"\n      url: "https://grpc-server.example.com"\n    )\n}\n'})}),"\n",(0,r.jsx)(s.admonition,{type:"info",children:(0,r.jsxs)(s.p,{children:["Read about ",(0,r.jsx)(s.a,{href:"/tailcallhq.github.io/docs/graphql-n-plus-one-problem-solved-tailcall",children:"n + 1"})," to learn how to use the ",(0,r.jsx)(s.code,{children:"batchKey"})," setting."]})}),"\n",(0,r.jsx)(s.h2,{id:"onresponsebody",children:"onResponseBody"}),"\n",(0,r.jsxs)(s.p,{children:["This hook allows you to intercept and modify the response body from upstream services before it's processed by Tailcall. Like ",(0,r.jsx)(s.a,{href:"/tailcallhq.github.io/docs/http-directive#onrequest",children:"onRequest"}),", it accepts a string value representing a middleware function defined in a JavaScript file. This function can be used to transform or validate the response data."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-graphql",metastring:"showLineNumbers",children:'type Query {\n  news: NewsData!\n    @grpc(\n      method: "news.NewsService.GetAllNews"\n      onResponseBody: "onResponse"\n    )\n}\n'})}),"\n",(0,r.jsx)(s.h2,{id:"select",children:"select"}),"\n",(0,r.jsxs)(s.p,{children:["You can use ",(0,r.jsx)(s.code,{children:"select"})," with mustache syntax to re-construct the directives\nresponse to the desired format. This is useful when data are deeply\nnested or want to keep specific fields only from the response."]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["EXAMPLE 1: if we have a call that returns ",(0,r.jsx)(s.code,{children:'{ "user": { "items": [...], ... } ... }'})," we can use ",(0,r.jsx)(s.code,{children:'"{{.user.items}}"'}),", to extract the ",(0,r.jsx)(s.code,{children:"items"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:["EXAMPLE 2: if we have a call that returns ",(0,r.jsx)(s.code,{children:'{ "foo": "bar", "fizz": { "buzz": "eggs", ... }, ... }'})," we can use ",(0,r.jsx)(s.code,{children:'{ foo: "{{.foo}}", buzz: "{{.fizz.buzz}}" }'})]}),"\n"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-graphql",metastring:"showLineNumbers",children:'type Query {\n  userCompany(id: Int!): Company\n    @grpc(\n      method: "news.UsersService.GetUserDetails"\n      select: "{{.company}}"\n    )\n  userDetails(id: Int!): UserDetails\n    @grpc(\n      method: "news.UsersService.GetUserDetails"\n      select: {\n        id: "{{.id}}"\n        city: "{{.address.city}}"\n        phone: "{{.phone}}"\n      }\n    )\n}\n'})}),"\n",(0,r.jsx)(s.h2,{id:"dedupe",children:"dedupe"}),"\n",(0,r.jsxs)(s.p,{children:["A boolean flag, if set to ",(0,r.jsx)(s.code,{children:"true"}),", will enable deduplication of IO operations to enhance performance. This flag prevents duplicate IO requests from being executed concurrently, reducing resource load. If not specified, this feature defaults to ",(0,r.jsx)(s.code,{children:"false"}),"."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-graphql",metastring:"showLineNumbers",children:'@grpc(\n  method: "news.UsersService.GetUserDetails"\n  dedupe: true\n)\n'})})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>c,x:()=>o});var r=n(96540);const t={},i=r.createContext(t);function c(e){const s=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),r.createElement(i.Provider,{value:s},e.children)}}}]);