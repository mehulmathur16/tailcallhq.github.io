"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[67],{70070:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>l,default:()=>o,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"directives/graphQL","title":"@graphQL","description":"The @graphQL directive allows to specify a GraphQL API server to fetch data from.","source":"@site/docs/directives/graphQL.md","sourceDirName":"directives","slug":"/graphQL-directive","permalink":"/docs/graphQL-directive","draft":false,"unlisted":false,"editUrl":"https://github.com/tailcallhq/tailcallhq.github.io/tree/develop/docs/directives/graphQL.md","tags":[],"version":"current","lastUpdatedAt":1732818775000,"frontMatter":{"title":"@graphQL","description":"The @graphQL directive allows to specify a GraphQL API server to fetch data from.","slug":"../graphQL-directive"},"sidebar":"docs","previous":{"title":"@expr","permalink":"/docs/expr-directive"},"next":{"title":"@grpc","permalink":"/docs/grpc-directive"}}');var t=n(74848),i=n(28453);const a={title:"@graphQL",description:"The @graphQL directive allows to specify a GraphQL API server to fetch data from.",slug:"../graphQL-directive"},l=void 0,c={},d=[{value:"<code>@graphQL</code> Directive Definition",id:"graphql-directive-definition",level:2},{value:"Example: Fetching Users from External API",id:"example-fetching-users-from-external-api",level:2},{value:"Request Flow Example",id:"request-flow-example",level:3},{value:"Directive Arguments",id:"directive-arguments",level:2},{value:"url",id:"url",level:3},{value:"name",id:"name",level:3},{value:"args",id:"args",level:3},{value:"headers",id:"headers",level:3},{value:"batch",id:"batch",level:3},{value:"dedupe",id:"dedupe",level:3},{value:"Combining Multiple Directives",id:"combining-multiple-directives",level:2}];function h(e){const r={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"@graphQL"})," directive allows you to specify an external GraphQL API server to fetch data from, making it easier to integrate remote data sources."]}),"\n",(0,t.jsxs)(r.h2,{id:"graphql-directive-definition",children:[(0,t.jsx)(r.code,{children:"@graphQL"})," Directive Definition"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-graphql",metastring:'title="Directive Definition" showLineNumbers',children:"directive @graphQL(\n  url: String!\n  name: String!\n  args: [InputKeyValue!]\n  headers: [InputKeyValue!]\n  batch: Boolean\n  dedupe: Boolean\n) on FIELD_DEFINITION\n"})}),"\n",(0,t.jsx)(r.h2,{id:"example-fetching-users-from-external-api",children:"Example: Fetching Users from External API"}),"\n",(0,t.jsxs)(r.p,{children:["The following example shows how to use the ",(0,t.jsx)(r.code,{children:"@graphQL"})," directive to fetch data from an external GraphQL API server:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-graphql",metastring:"showLineNumbers",children:'type Query {\n  users: [User]\n    @graphQL(\n      url: "https://jsonplaceholder.typicode.com"\n      name: "userList"\n    )\n}\n'})}),"\n",(0,t.jsxs)(r.p,{children:["In the example above, the ",(0,t.jsx)(r.code,{children:"@graphQL"})," directive specifies that the ",(0,t.jsx)(r.code,{children:"users"})," field should be resolved by fetching data from an external GraphQL endpoint."]}),"\n",(0,t.jsx)(r.h3,{id:"request-flow-example",children:"Request Flow Example"}),"\n",(0,t.jsxs)(r.p,{children:["Given a query for ",(0,t.jsx)(r.code,{children:"users"}),":"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-graphql",metastring:"showLineNumbers",children:"query {\n  users {\n    id\n    name\n  }\n}\n"})}),"\n",(0,t.jsx)(r.p,{children:"Tailcall will make the following query to the upstream server:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-graphql",metastring:"showLineNumbers",children:"query {\n  userList {\n    id\n    name\n  }\n}\n"})}),"\n",(0,t.jsx)(r.h2,{id:"directive-arguments",children:"Directive Arguments"}),"\n",(0,t.jsx)(r.h3,{id:"url",children:"url"}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"url"})," parameter specifies the endpoint for the external GraphQL API:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-graphql",metastring:"showLineNumbers",children:'type Query {\n  users: [User]\n    @graphQL(\n      name: "users"\n      url: "https://graphqlzero.almansi.me/api"\n    )\n}\n'})}),"\n",(0,t.jsx)(r.h3,{id:"name",children:"name"}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"name"})," parameter specifies the name of the root field in the external API. For example:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-graphql",metastring:"showLineNumbers",children:'type Query {\n  users: [User]\n    @graphQL(\n      url: "https://jsonplaceholder.typicode.com"\n      name: "userList"\n    )\n}\n'})}),"\n",(0,t.jsxs)(r.p,{children:["In this case, ",(0,t.jsx)(r.code,{children:"users"})," maps to ",(0,t.jsx)(r.code,{children:"userList"})," in the upstream query."]}),"\n",(0,t.jsx)(r.h3,{id:"args",children:"args"}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"args"})," parameter allows you to pass arguments to the upstream GraphQL query:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-graphql",metastring:"showLineNumbers",children:'type Query {\n  user: User\n    @graphQL(\n      url: "https://jsonplaceholder.typicode.com"\n      name: "user"\n      args: [{key: "id", value: "{{.value.userId}}"}]\n    )\n}\n'})}),"\n",(0,t.jsx)(r.p,{children:"Example query to fetch a user's name by ID:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-graphql",metastring:"showLineNumbers",children:"query {\n  user(id: 1) {\n    name\n  }\n}\n"})}),"\n",(0,t.jsx)(r.h3,{id:"headers",children:"headers"}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"headers"})," parameter customizes the HTTP headers sent in the GraphQL request:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-graphql",metastring:"showLineNumbers",children:'type Mutation {\n  users: User\n    @graphQL(\n      url: "https://jsonplaceholder.typicode.com"\n      name: "users"\n      headers: [{key: "X-Server", value: "Tailcall"}]\n    )\n}\n'})}),"\n",(0,t.jsxs)(r.p,{children:["Here, the ",(0,t.jsx)(r.code,{children:"X-Server"})," header is added to requests."]}),"\n",(0,t.jsx)(r.h3,{id:"batch",children:"batch"}),"\n",(0,t.jsxs)(r.p,{children:["If the upstream server supports batching, you can use the ",(0,t.jsx)(r.code,{children:"batch"})," option to batch requests:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-graphql",metastring:"showLineNumbers",children:'type Query {\n  users: [User]\n    @graphQL(\n      url: "https://jsonplaceholder.typicode.com"\n      name: "users"\n      batch: true\n    )\n  posts: [Post]\n    @graphQL(\n      url: "https://jsonplaceholder.typicode.com"\n      name: "posts"\n      batch: true\n    )\n}\n'})}),"\n",(0,t.jsx)(r.h3,{id:"dedupe",children:"dedupe"}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"dedupe"})," parameter is a boolean flag that, when set to ",(0,t.jsx)(r.code,{children:"true"}),", prevents duplicate requests from being sent concurrently:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-graphql",metastring:"showLineNumbers",children:'type Query {\n  users: [User]\n    @graphQL(\n      url: "https://jsonplaceholder.typicode.com"\n      name: "users"\n      dedupe: true\n    )\n}\n'})}),"\n",(0,t.jsx)(r.h2,{id:"combining-multiple-directives",children:"Combining Multiple Directives"}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"@graphQL"})," directive can be used in combination with other ",(0,t.jsx)(r.a,{href:"/docs/tailcall-dsl-graphql-custom-directives#resolvable-directives",children:"resolvable directives"}),", with results merged deeply. This allows for powerful and flexible resolver configurations."]}),"\n",(0,t.jsxs)(r.p,{children:["For more details, see ",(0,t.jsx)(r.a,{href:"/docs/tailcall-dsl-graphql-custom-directives",children:"Directives Documentation"}),"."]})]})}function o(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>l});var s=n(96540);const t={},i=s.createContext(t);function a(e){const r=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(i.Provider,{value:r},e.children)}}}]);